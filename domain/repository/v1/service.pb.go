// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repository/service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	domain "github.com/yagacc/go-sea-port/domain/domain"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRequest struct {
	PortId               string   `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1771b2eefffe29c, []int{0}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetPortId() string {
	if m != nil {
		return m.PortId
	}
	return ""
}

type GetResponse struct {
	Port                 *domain.Port `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1771b2eefffe29c, []int{1}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetPort() *domain.Port {
	if m != nil {
		return m.Port
	}
	return nil
}

type SaveRequest struct {
	Port                 *domain.Port `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SaveRequest) Reset()         { *m = SaveRequest{} }
func (m *SaveRequest) String() string { return proto.CompactTextString(m) }
func (*SaveRequest) ProtoMessage()    {}
func (*SaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1771b2eefffe29c, []int{2}
}

func (m *SaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveRequest.Unmarshal(m, b)
}
func (m *SaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveRequest.Marshal(b, m, deterministic)
}
func (m *SaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveRequest.Merge(m, src)
}
func (m *SaveRequest) XXX_Size() int {
	return xxx_messageInfo_SaveRequest.Size(m)
}
func (m *SaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveRequest proto.InternalMessageInfo

func (m *SaveRequest) GetPort() *domain.Port {
	if m != nil {
		return m.Port
	}
	return nil
}

type SaveResponse struct {
	Port                 *domain.Port `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SaveResponse) Reset()         { *m = SaveResponse{} }
func (m *SaveResponse) String() string { return proto.CompactTextString(m) }
func (*SaveResponse) ProtoMessage()    {}
func (*SaveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1771b2eefffe29c, []int{3}
}

func (m *SaveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveResponse.Unmarshal(m, b)
}
func (m *SaveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveResponse.Marshal(b, m, deterministic)
}
func (m *SaveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveResponse.Merge(m, src)
}
func (m *SaveResponse) XXX_Size() int {
	return xxx_messageInfo_SaveResponse.Size(m)
}
func (m *SaveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveResponse proto.InternalMessageInfo

func (m *SaveResponse) GetPort() *domain.Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "repository.v1.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "repository.v1.GetResponse")
	proto.RegisterType((*SaveRequest)(nil), "repository.v1.SaveRequest")
	proto.RegisterType((*SaveResponse)(nil), "repository.v1.SaveResponse")
}

func init() { proto.RegisterFile("repository/service.proto", fileDescriptor_c1771b2eefffe29c) }

var fileDescriptor_c1771b2eefffe29c = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x28, 0x4a, 0x2d, 0xc8,
	0x2f, 0xce, 0x2c, 0xc9, 0x2f, 0xaa, 0xd4, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x45, 0xc8, 0xe8, 0x95, 0x19, 0x4a, 0x09, 0xa7, 0xe4, 0xe7,
	0x26, 0x66, 0xe6, 0xe9, 0x43, 0x28, 0x88, 0x1a, 0x25, 0x55, 0x2e, 0x2e, 0xf7, 0xd4, 0x92, 0xa0,
	0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x71, 0x2e, 0xf6, 0x82, 0xfc, 0xa2, 0x92, 0xf8, 0xcc,
	0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x36, 0x10, 0xd7, 0x33, 0x45, 0x49, 0x9f, 0x8b,
	0x1b, 0xac, 0xac, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x81, 0x8b, 0x05, 0x24, 0x01, 0x56,
	0xc4, 0x6d, 0xc4, 0xa3, 0x07, 0x35, 0x32, 0x20, 0xbf, 0xa8, 0x24, 0x08, 0x2c, 0x03, 0xd2, 0x10,
	0x9c, 0x58, 0x96, 0x0a, 0x33, 0x98, 0xb0, 0x06, 0x03, 0x2e, 0x1e, 0x88, 0x06, 0x62, 0xad, 0x30,
	0xea, 0x67, 0xe4, 0xe2, 0x03, 0x73, 0xe1, 0xbe, 0x14, 0xb2, 0xe1, 0x62, 0x76, 0x4f, 0x2d, 0x11,
	0x92, 0xd4, 0x43, 0xf1, 0xb9, 0x1e, 0xc2, 0x87, 0x52, 0x52, 0xd8, 0xa4, 0xa0, 0x56, 0xda, 0x73,
	0xb1, 0x80, 0x9c, 0x20, 0x84, 0xae, 0x06, 0xc9, 0x23, 0x52, 0xd2, 0x58, 0xe5, 0x20, 0x06, 0x38,
	0xf1, 0x47, 0x21, 0x05, 0xb9, 0x7e, 0x99, 0x61, 0x12, 0x1b, 0x38, 0x90, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x85, 0xb1, 0x16, 0x8a, 0xa4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PortRepositoryClient is the client API for PortRepository service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortRepositoryClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Save(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*SaveResponse, error)
}

type portRepositoryClient struct {
	cc *grpc.ClientConn
}

func NewPortRepositoryClient(cc *grpc.ClientConn) PortRepositoryClient {
	return &portRepositoryClient{cc}
}

func (c *portRepositoryClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/repository.v1.PortRepository/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portRepositoryClient) Save(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*SaveResponse, error) {
	out := new(SaveResponse)
	err := c.cc.Invoke(ctx, "/repository.v1.PortRepository/Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PortRepositoryServer is the server API for PortRepository service.
type PortRepositoryServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Save(context.Context, *SaveRequest) (*SaveResponse, error)
}

// UnimplementedPortRepositoryServer can be embedded to have forward compatible implementations.
type UnimplementedPortRepositoryServer struct {
}

func (*UnimplementedPortRepositoryServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPortRepositoryServer) Save(ctx context.Context, req *SaveRequest) (*SaveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Save not implemented")
}

func RegisterPortRepositoryServer(s *grpc.Server, srv PortRepositoryServer) {
	s.RegisterService(&_PortRepository_serviceDesc, srv)
}

func _PortRepository_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortRepositoryServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.v1.PortRepository/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortRepositoryServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortRepository_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortRepositoryServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.v1.PortRepository/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortRepositoryServer).Save(ctx, req.(*SaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PortRepository_serviceDesc = grpc.ServiceDesc{
	ServiceName: "repository.v1.PortRepository",
	HandlerType: (*PortRepositoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _PortRepository_Get_Handler,
		},
		{
			MethodName: "Save",
			Handler:    _PortRepository_Save_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "repository/service.proto",
}
